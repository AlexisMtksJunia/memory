name: CI Memory

# Déclenchement du workflow dès qu'un push est détecté sur la branche "develop"
on:
  push:
    branches:
      - develop

jobs:
  # 4.1 : Job de test : vérifie l'intégrité des fichiers JPEG
  test-memory:
    # Exécuter ce job sur un runner self-hosted
    runs-on: self-hosted
    steps:
      # Étape de checkout : Récupère le code source depuis le dépôt
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Étape de test : vérifie que chaque fichier JPEG est valide
      - name: Run file command on jpgs
        run: |
          for img in $(find . -name "*.jpg"); do
            if ! file "$img" | grep -q "JPEG image data"; then
              echo "$img est corrompu. Remplacez-le par un fichier de votre choix."
              # Ajoutez ici la commande pour remplacer l'image corrompue si besoin
            fi
          done

  # 4.2 : Job de build : construit l'image Docker du site
  build-memory:
    # Ce job dépend du job "test-memory" et ne s'exécute qu'après lui
    needs: test-memory
    runs-on: self-hosted
    steps:
      # Étape de checkout : Récupère le code source depuis le dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape de construction : construit l'image Docker nommée <username>/memory
      - name: Build Docker image
        run: docker build -t AlexisMtksJunia/memory .

        